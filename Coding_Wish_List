Wish List for Perry text project:


*** = priority for digital humanities conference (end of internship)

Midi controller (0-128)
Hopefully not more than 8 controls

Sliders/Dials
  Speed
  Size
  Alpha
  Font (include Monaco as tribute to Heavy Industries)
  Grayscale or text vs background

Button pressed (boolean, 0 or 128)
  Restart from beginning (one-time reset)
  While pressed, make text red

Toggle (true/false, switches from on to off with each press)
   *** Pause
  Reverse black and white (immediate; priority over grayscale)
    Consider possible problems of what controls font color
    If above/below [threshold], turn to opposite 
    Toggle text to red or back to black(or white)

  Disrupt linearity?
    Pull random words from array
    Later: scramble words (research how in arrays... arrays within arrays. String --> chars). 

If we scramble words we then need to determine whether to resume at beginning of text or resume from last word.

      Dyslexia vs. "bad spelling version" of a text... Look at common dyslexia and spelling mistakes


Additional thoughts:
  move? (change alignement or centering? Add noise/randomness to motion?)
  React to mouse 

  *** textWidth(str) calculates and returns the width of any character or text string. Use to keep words within bounds of the frame
  https://processing.org/reference/textWidth_.html

Libraries to consider

Research midibus library.
Add sound, again a nod to Heavy Industries. Use Minim or Sound Library. Each has advantages. Minim has been around longer. If we do this we can make an aspect of the text, say the font size, dependent on the sound....bigger as volume increases, etc.
Consider libraries for GUI.if we stick with midi, or even buttons, we can avoid it, but may still be of some interest.


Very random variations : we can easily substitute the white rect we use as background with live or pre-recorded video. However this may affect processing power/speed.


